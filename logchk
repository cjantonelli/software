#!/bin/bash

# check if users have a login on gl, and prompt them to get one if not.
# also checks if they have an account.


CLNAME="Great Lakes"
CLFORM="https://myumi.ch/3qDWB"
REGMAIL=hpc-course
COURSEMAIL=hpc-course
REASON="we'll be covering computing on the $CLNAME cluster"

let nologin=0 noaccount=0 mailed=0 okay=0

bflag=false
let bti=3

OPTLIST="Ddfhlmnru"
dflag=false fflag=false hflag=false mflag=false nflag=false rflag=false uflag=false debug=false

usage()
{
	cat <<EOF
usage:	$1 [-$OPTLIST] [uniqnamelist.txt]
	-d:	dry run (send any email to you, and exit after the first such)
	-f:	force email to be sent (dry run only)
	-h:	show help
	-l:	list course numbers and names, then exit
	-m:	don't mine course information from filename
	-n:	don't send any email at all
	-r:	relax; don't use any urgent language
	-u:	use more urgent language
	-D:	debug mode (for testing only)
EOF
}

while getopts $OPTLIST OPT; do
	  case $OPT in
		D)	debug=true
			;;
		d)	dflag=true
			;;
		f)	fflag=true
			;;
		h)	usage `basename $0`
			exit 0
			;;
		l)	grep CLASSNAME= $0 | grep -v grep
			exit 0
			;;
		m)	mflag=true
			;;
		n)	nflag=true
			;;
		r)	rflag=true
			;;
		u)	uflag=true
			;;
		?)	usage `basename $0`
			exit 1
			;;
	  esac
done
shift $(($OPTIND - 1))

if [ $nflag = true -a $dflag = true ]; then
	echo Please choose one of -n or -d.
	exit 1
fi

if [ $fflag = true -a $dflag = false ]; then
	echo -f forces -d.
	dflag=true
fi

if [ $# -gt 0 ]; then F=$1; else F=$0.uniq; echo Using default input file \"$F\" ...; fi

if [ ! -r "$F" ]; then echo Can\'t read input file \"$F\" ... quitting; exit 1; fi

if [ $mflag = false ]; then
	CLASSABBR=`expr "$F" : '\([^_\.]*\)'`
	case $CLASSABBR in
		hpc100) CLASSNAME="Introduction to the Linux Command line";;
		hpc101) CLASSNAME="Introduction to the Flux cluster and batch computing";;
		hpc103) CLASSNAME="Sliding into Slurm: An early look at U-M's new high-performance computing environment";;
		hpc113) CLASSNAME="Research Computing on the Great Lakes cluster";;
		hpc104) CLASSNAME="Introduction to the Great Lakes cluster and batch computing with Slurm";;
		hpc201) CLASSNAME="Advanced batch computing on the Flux cluster";;
		hpc204) CLASSNAME="Advanced batch computing with SLURM on the Great Lakes cluster";;
		stats) CLASSNAME="Stats Student Orientation: Flux review"; REASON="you've been invited to attend tomorrow's computing workshop meant to introduce Department of Statistics graduate students to the $CLNAME computing cluster";;
		biophys435) CLASSNAME="BIOPHYS 435"; REASON="we'll be covering computing on the $CLNAME cluster during the 10/17 lecture";;
		*) echo Unknown course \"$CLASSABBR\" ... quitting; exit 1;;
	esac
	CLASSYR=`expr "$F" : '[^_]*_\(20[0-9][0-9]\)'`
	CLASSMO=`expr "$F" : '[^_]*_20[0-9][0-9]\([0-9][0-9]\)'`
	CLASSDA=`expr "$F" : '[^_]*_20[0-9][0-9][0-9][0-9]\([0-9][0-9]\)'`
	CLASSDATE=$CLASSMO/$CLASSDA/$CLASSYR
	if [ -z "$CLASSYR" -o -z "$CLASSMO" -o -z "$CLASSDA" ]; then
		SUBJECT="Subject: $CLASSNAME HPC session, your action needed"
	else
		DTG=`expr "\`tde $CLASSYR$CLASSMO$CLASSDA now\`" : '\([^:\]*\)'`
		if [ $rflag != true ]; then
			if [ $DTG -lt 0 ]; then
				echo -n "Class has already happened!  Continue anyway [yNq]? "
				read ans
				if [ "$ans" != y ]; then exit 1; fi
			elif [ $DTG -eq 0 ]; then
				echo Class is within 24 hours!
				bflag=blitz
				uflag=true
			elif [ $DTG -ge 0 -a $DTG -lt $bti ]; then
				echo Class is less than $bti days away!
				bflag=true
				uflag=true
			fi
		fi
		SUBJECT="Subject: $CLASSNAME HPC session, held $CLASSDATE, your action needed"
	fi
else
	SUBJECT="Subject: HPC session, your action needed"
fi

if [ $uflag = true ]; then
	SUBJECT="$SUBJECT now!"
	echo Will use more urgent language.
else
	echo Will use standard language.
fi

if [ $nflag = true ]; then
	mflag=false
else
	if [ $dflag = true ]; then
		echo -n "Dry run: do you want to send one email reminder to ${USER:-cja} [yNq]? "
	else
		echo -n "Do you want to send email reminders to students? [yNq]? "
	fi
	read ans
	if [ "$ans" = q ]; then exit 1; fi
	if [ -z "$ans" -o "$ans" != y -a "$ans" != Y ]; then mflag=false; else mflag=true; fi
fi

if [ $mflag = true ]; then
	echo Will add header Reply-to: $COURSEMAIL@umich.edu
	if [ $dflag = false ]; then
		echo Will add header Bcc: $REGMAIL@umich.edu
	else
		echo Will NOT add header Bcc:
	fi
	while true; do
		echo -n "$SUBJECT [yNq]? "
		read ans
		if [ "$ans" = q ]; then exit 1; fi
		if [ -z "$ans" -o "$ans" != y -a "$ans" != Y ]; then
			echo -n "Subject? "
			read SUBJECT	
			SUBJECT="Subject: $SUBJECT"
		else
			break
		fi
	done
	echo -n "Is this a waitlist? [yN]? "
	read ans
	if [ -z "$ans" -o "$ans" != y -a "$ans" != Y ]; then wflag=false; else wflag=true; fi
fi

while true; do
	IFS=$IFS, read -a UL
	if test -z "$UL"; then break; fi
	for U in ${UL[*]}; do
		id $U
		if [ $? != 0 -o $fflag = true ]; then
			echo
			let ++nologin
			if [ $mflag = true ]; then
				if [ $debug = true ]; then
					PROC=cat
				else
					PROC='/usr/sbin/sendmail -t'
				fi
				if [ $dflag = true ]; then
					U=${USER:-cja}
				fi
				$PROC -t <<EOF
Reply-to: $COURSEMAIL@umich.edu
To: ${U}@umich.edu
`if [ $dflag = false ]; then echo Bcc: $REGMAIL@umich.edu; else echo X-20:;fi`
$SUBJECT
Content-type: text/plain    

Hello,

You're getting this note because $REASON, and you do not yet appear to have a $CLNAME login account. Thus, there are two things you will need to do.

First, please visit $CLFORM and fill out at least the mandatory fields to obtain one.  If you do not have an advisor, put your own name in the advisor field.  A $CLNAME login account is free to members of the University community.

`if [ $uflag = false ]; then echo Please note that obtaining a $CLNAME login account requires human processing, so be sure to do this as soon as possible.; else echo Please note that obtaining a $CLNAME login account requires human processing, so please do this now if at all possible!; fi`

Second, $CLNAME requires Duo two-factor authentication to access your $CLNAME login account.  If you are already enrolled in Duo, you can skip the rest of this message.

$CLNAME uses a Duo app running on your smartphone to provide a second form of authentication in addition to that provided by your Kerberos password.  If you are not enrolled in Duo, you cannot login to $CLNAME.

Please visit https://documentation.its.umich.edu/2fa/enroll-smartphone-or-tablet-duo to enroll your smartphone or tablet in Duo.  This page provides detailed instructions for accomplishing this, and you will not need to visit other pages.  More information on Duo is at http://its.umich.edu/accounts-access/uniqnames-passwords/two-factor-authentication .

Thank you for your time and attention to this matter.

`if [ $wflag = true ]; then echo Even though you are on the waitlist, you are nevertheless encouraged to obtain your $CLNAME account and show up for class, in case there are some no-shows among the registered attendees.  However, if enough registered people show up, you may be asked to vacate your seat.; fi`

Looking forward to seeing you at the session,
The HPC Training Team
EOF
				if [ $? -eq 0 ]; then
					if [ "$PROC" != cat ]; then
						let ++mailed
						echo Mail sent to $U.
					fi
				else
					echo Problem with $PROC, mail NOT sent to $U ... quitting
					exit 1
				fi
				if [ $dflag = true ]; then
					echo Dry run, exit after one cycle
					exit 0
				fi
			fi
		elif [ `my_accounts $U </dev/tty|grep 'Account *: "training"' | wc -l` -ne 1 ]; then
			echo -e "*** $U HAS NO TRAINING RESOURCE ACCOUNT\n"
			let ++noaccount

		else
			let ++okay
		fi
	done
done <$F

echo nologin=$nologin, noaccount=$noaccount, mailed=$mailed, okay=$okay
